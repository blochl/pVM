#!/bin/bash

#------------------------------------------------------------------------------
# Copyright (c) 2016, Leonid Bloch
# All rights reserved.
# This code is licensed under standard 3-clause BSD license.
# See file LICENSE supplied with this package for the full license text.
#------------------------------------------------------------------------------

GEOMETRY=110x70  # Geometry of the opened ET window
FONTDIR=${HOME}/.local/share/fonts
VIMRC=${HOME}/.vimrc
ETCOMM=$(printf 'et() { (gvim -u %s -geometry %s "$@" &) }' "${VIMRC}" $GEOMETRY)

sed -i '/^et() {/d' ${HOME}/.bashrc
echo ${ETCOMM} >> ${HOME}/.bashrc

echo "Downloading fonts..."
PL_URL="https://github.com/powerline/fonts/raw/master"
mkdir -p ${FONTDIR}
pushd ${FONTDIR}
curl -L ${PL_URL}/DejaVuSansMono/DejaVu%20Sans%20Mono%20Bold%20Oblique%20for%20Powerline.ttf \
    -o "./DejaVu Sans Mono Bold Oblique for Powerline.ttf"
curl -L ${PL_URL}/DejaVuSansMono/DejaVu%20Sans%20Mono%20Bold%20for%20Powerline.ttf \
    -o "./DejaVu Sans Mono Bold for Powerline.ttf"
curl -L ${PL_URL}/DejaVuSansMono/DejaVu%20Sans%20Mono%20Oblique%20for%20Powerline.ttf \
    -o "./DejaVu Sans Mono Oblique for Powerline.ttf"
curl -L ${PL_URL}/DejaVuSansMono/DejaVu%20Sans%20Mono%20for%20Powerline.ttf \
    -o "./DejaVu Sans Mono for Powerline.ttf"
mkfontscale
mkfontdir
xset +fp $(pwd)
xset fp rehash
popd

curl -L --create-dirs https://raw.githubusercontent.com/junegunn/vim-plug/master/plug.vim \
    -o ${HOME}/.vim/autoload/plug.vim
cat > ${VIMRC} <<EOF
set nocompatible

call plug#begin('~/.vim/plugged')

" --- Making Vim look good ---
Plug 'altercation/vim-colors-solarized'
Plug 'tomasr/molokai'
Plug 'vim-airline/vim-airline'
Plug 'vim-airline/vim-airline-themes'

" --- Programming stuff ---
Plug 'scrooloose/nerdtree', { 'on': 'NERDTreeToggle' } | Plug 'Xuyuanp/nerdtree-git-plugin'
Plug 'kien/ctrlp.vim'
Plug 'vim-scripts/a.vim'
Plug 'sheerun/vim-polyglot'
Plug 'bronson/vim-trailing-whitespace'
Plug 'junegunn/vim-easy-align'
Plug 'ervandew/supertab'

" --- Working with Git ---
Plug 'airblade/vim-gitgutter'
Plug 'tpope/vim-fugitive'

" --- Other text editing features ---
Plug 'Raimondi/delimitMate'
Plug 'chikamichi/mediawiki.vim'

" --- Tmux ---
Plug 'christoomey/vim-tmux-navigator'

call plug#end()

" ----- General settings -----
set backspace=indent,eol,start
set ruler
set number
set showcmd
set incsearch
set hlsearch
set cursorline
set ignorecase
set smartcase

"syntax on

set mouse=a

" --- Sets how many lines of history VIM has to remember ---
set history=1000

" --- Turn on the WiLd menu ---
set wildmenu
set wildmode=list:longest,full

" --- Spelling ---
nmap <silent> <leader>s :set spelllang=en_us spell!<CR>

" --- Give Spec files Python syntax coloring ---
autocmd BufNewFile,BufRead *.spec set syntax=python
autocmd BufNewFile,BufRead *.mac set syntax=python
autocmd BufNewFile,BufRead *.pti set syntax=python

" --- See 80th column ---
if (exists('+colorcolumn'))
    set colorcolumn=80
    highlight ColorColumn ctermbg=9
endif

" --- Buffers handling ---
" Buffers - next/previous/list&pick: F12, F11, F5.
nnoremap <silent> <F12> :bn!<CR>
nnoremap <silent> <F11> :bp!<CR>
nnoremap <F5> :buffers<CR>:buffer<space>

" --- GUI options ---
if has('gui_running')
  set guifont=DejaVu\ Sans\ Mono\ for\ Powerline\ 12
  "set guifont=Hack\ 12
  set guioptions-=m  "remove menu bar
  set guioptions-=T  "remove toolbar
  set guioptions-=r  "remove right-hand scroll bar
  set guioptions-=L  "remove left-hand scroll bar
  set mouseshape=n:beam  "mouse pointer shape
endif

" ----- Plugin-Specific Settings -----

" --- altercation/vim-colors-solarized settings ---
" Toggle this to "light" for light colorscheme
set background=dark
"set background=light

" Uncomment the next line if your terminal is not configured for solarized
let g:solarized_termcolors=256
set t_Co=256

" Set the colorscheme
colorscheme solarized

" --- vim-airline/vim-airline settings ---
" Always show statusbar
set laststatus=2

" Fancy arrow symbols, requires a patched font
" To install a patched font, install a forPowerline font from:
"     https://github.com/powerline/fonts
" change the terminal font to it, and uncomment the next line:
let g:airline_powerline_fonts = 1

" Show PASTE if in paste mode
let g:airline_detect_paste = 1

" Show airline for tabs too
let g:airline#extensions#tabline#enabled = 1

" --- scrooloose/nerdtree ---
" Open/close NERDTree with \t
nmap <silent> <leader>t :NERDTreeToggle<CR>
" Close vim if the only window left open is NERDTree
autocmd bufenter * if (winnr("$") == 1 && exists("b:NERDTree") && b:NERDTree.isTabTree()) | q | endif

" --- airblade/vim-gitgutter settings ---
" Required after having changed the colorscheme
hi clear SignColumn
" In vim-airline, only display "hunks" if the diff is non-zero
let g:airline#extensions#hunks#non_zero_only = 1

" --- Raimondi/delimitMate settings ---
let delimitMate_expand_cr = 1
augroup mydelimitMate
  au!
  au FileType markdown let b:delimitMate_nesting_quotes = ["\`"]
  au FileType tex let b:delimitMate_quotes = ""
  au FileType tex let b:delimitMate_matchpairs = "(:),[:],{:},\`:'"
  au FileType python let b:delimitMate_nesting_quotes = ['"', "'"]
augroup END

" --- Easy align settings ---
vnoremap <silent> <Enter> :EasyAlign<CR>

" --- SuperTab settings ---
let g:SuperTabDefaultCompletionType = 'context'
autocmd FileType *
  \ if &omnifunc != '' |
  \   call SuperTabChain(&omnifunc, "<c-p>") |
  \ endif
EOF

vim -u ${VIMRC} -e +PlugInstall +qall 2>/dev/null
